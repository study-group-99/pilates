name: comments

on:
  issue_comment:                                     
    types: [created, edited, deleted]

  pull_request:
    
jobs:
  libftunittest:
    # if: contains(github.event.comment.html_url, '/pull/')
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      # - uses: actions/checkout@v2
      # - id: init
      #   if: contains(github.event.comment.body, '/libft')
      #   run: |
      #     mkdir ${{ github.workspace }}/testdata/libft/pilates
      #     cp -a ${{ github.workspace }}/libft/. ${{ github.workspace }}/testdata/libft/pilates/
      #     ls ${{ github.workspace }}/testdata/libft/pilates
      #     rm ${{ github.workspace }}/testdata/libft/pilates/CMakeLists.txt
      #     cp ${{ github.workspace }}/libft/CMakeLists.txt.test ${{ github.workspace }}/testdata/libft/pilates/CMakeLists.txt
      #     cp ${{ github.workspace }}/libft/CMakeLists.txt.in ${{ github.workspace }}/testdata/libft/CMakeLists.txt.in
      #     cp ${{ github.workspace }}/libft/CMakeLists.txt ${{ github.workspace }}/testdata/libft/CMakeLists.txt
      # - id: build
      #   run: |
      #     cmake -S . -B build
      #     cmake --build build
      #   working-directory: ${{ github.workspace }}/testdata/libft
      - id: run
        # run: |
        #   ctest --output-on-failure
        run: |
          echo "::set-output name=test::https://google.com"
        # working-directory: ${{ github.workspace }}/testdata/libft/build

  libftcommentback:
    needs: libftunittest
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{needs.job1.outputs.output1}}

