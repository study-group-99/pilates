name: comments

on:
  issue_comment:                                     
    types: [created, edited, deleted]

  pull_request:

jobs:
  libft:
    # if: contains(github.event.comment.html_url, '/pull/')
    runs-on: ubuntu-latest
    outputs:
      res: ${{ steps.step1.outputs.results }}
    steps:
      - id: step1
        run: echo "::set-output name=results::hello world"
      - uses: actions/checkout@v2
      - name: init
        # if: contains(github.event.comment.body, '/libft')
        run: |
          mkdir ${{ github.workspace }}/testdata/libft/pilates
          cp -a ${{ github.workspace }}/libft/. ${{ github.workspace }}/testdata/libft/pilates/
          ls ${{ github.workspace }}/testdata/libft/pilates
          rm ${{ github.workspace }}/testdata/libft/pilates/CMakeLists.txt
          cp ${{ github.workspace }}/libft/CMakeLists.txt.test ${{ github.workspace }}/testdata/libft/pilates/CMakeLists.txt
          cp ${{ github.workspace }}/libft/CMakeLists.txt.in ${{ github.workspace }}/testdata/libft/CMakeLists.txt.in
          cp ${{ github.workspace }}/libft/CMakeLists.txt ${{ github.workspace }}/testdata/libft/CMakeLists.txt
      - name: build
        run: |
          cmake -S . -B build
          cmake --build build
        working-directory: ${{ github.workspace }}/testdata/libft
      - name: run
        run: |
          ctest --output-on-failure
        working-directory: ${{ github.workspace }}/testdata/libft/build
  libftcomment:
    runs-on: ubuntu-latest
    needs: libft
    steps:
      - run: echo ${{needs.libft.outputs.res}} 
